version: '3.8'

services:
  # Elasticsearch服务（生产环境配置）
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: insurance-rag-es
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-changeme}
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - cluster.name=insurance-rag-cluster
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "127.0.0.1:9200:9200"  # 仅本地访问
    networks:
      - rag-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "-u", "elastic:${ELASTIC_PASSWORD:-changeme}", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # RAG API服务（生产环境配置）
  rag-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: insurance-rag-api
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - ES_USER=elastic
      - ES_PASSWORD=${ELASTIC_PASSWORD:-changeme}
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - API_KEY=${API_KEY}  # API认证密钥
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*}  # CORS配置
      - MAX_UPLOAD_SIZE=10485760  # 10MB
    volumes:
      - ./uploads:/app/uploads
      - ./output:/app/output
      - ./logs:/app/logs
      - ./.env:/app/.env:ro  # 只读
    ports:
      - "8000:8000"
    networks:
      - rag-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    command: >
      sh -c "
        echo 'Waiting for Elasticsearch...' &&
        sleep 15 &&
        uvicorn es_rag_api:app --host 0.0.0.0 --port 8000 --workers 2 --access-log
      "

  # Nginx反向代理 + SSL
  nginx:
    image: nginx:alpine
    container_name: insurance-rag-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书目录
      - ./web_demo_enhanced.html:/usr/share/nginx/html/index.html:ro
      - nginx_cache:/var/cache/nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - rag-network
    depends_on:
      - rag-api
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis缓存（可选，提升性能）
  redis:
    image: redis:7-alpine
    container_name: insurance-rag-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    ports:
      - "127.0.0.1:6379:6379"  # 仅本地访问
    volumes:
      - redis_data:/data
    networks:
      - rag-network
    restart: always

networks:
  rag-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  es_data:
    driver: local
  redis_data:
    driver: local
  nginx_cache:
    driver: local